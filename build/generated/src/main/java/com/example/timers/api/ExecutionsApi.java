/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.timers.api;

import com.example.timers.model.TimerExecution;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "Executions", description = "the Executions API")
public interface ExecutionsApi {

    default ExecutionsApiDelegate getDelegate() {
        return new ExecutionsApiDelegate() {};
    }

    /**
     * GET /api/executions : List executions
     *
     * @param instanceId  (optional)
     * @param page  (optional, default to 0)
     * @param size  (optional, default to 20)
     * @return Executions (status code 200)
     */
    @Operation(
        operationId = "listExecutions",
        summary = "List executions",
        tags = { "Executions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Executions", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = TimerExecution.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/executions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<TimerExecution>> listExecutions(
        @Parameter(name = "instanceId", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "instanceId", required = false) String instanceId,
        @Min(0) @Parameter(name = "page", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page", required = false, defaultValue = "0") Integer page,
        @Min(1) @Max(200) @Parameter(name = "size", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "size", required = false, defaultValue = "20") Integer size
    ) {
        return getDelegate().listExecutions(instanceId, page, size);
    }

}
